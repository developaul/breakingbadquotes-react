{"version":3,"sources":["components/Frases.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["ContenedorFrase","styled","div","Frases","frase","quote","author","SkChase","SkChaseDot","Spinner","Contenedor","Boton","button","App","useState","guardarFrase","spinner","changeSpinner","consultarAPI","a","fetch","api","json","useEffect","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gqDAIA,IAAMA,EAAkBC,IAAOC,IAAV,KAuENC,EAbA,SAAC,GAAiC,IAAD,IAA9BC,MAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,OAC7B,OACI,eAACN,EAAD,WACI,6BAAMK,IACN,mCAAOC,S,0qDC/DnB,IAAMC,EAAUN,IAAOC,IAAV,KAWPM,EAAaP,IAAOC,IAAV,KAwEDO,EAXC,kBACZ,eAACF,EAAD,WACI,cAACC,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,Q,8mBC5ER,IAAME,EAAaT,IAAOC,IAAV,KAOVS,EAAQV,IAAOW,OAAV,KA2DIC,MA1Cf,WAAe,MAEoBC,mBAAS,IAF7B,mBAENV,EAFM,KAECW,EAFD,OAGsBD,oBAAU,GAHhC,mBAGNE,EAHM,KAGGC,EAHH,KAKRC,EAAY,uCAAI,8BAAAC,EAAA,6DACrBF,GAAe,GADM,SAGDG,MAAO,uDAHN,cAGfC,EAHe,gBAIAA,EAAIC,OAJJ,OAIflB,EAJe,OAKrBW,EAAcX,EAAM,IAEpBa,GAAe,GAPM,2CAAJ,qDAclB,OAJAM,qBAAW,WACVL,MACE,IAGF,eAACR,EAAD,WACGM,EAEA,cAAC,EAAD,IAIA,cAAC,EAAD,CACCZ,MAAQA,IAKX,cAACO,EAAD,CACCa,QAAUN,EADX,+BCnDYO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.400daeee.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\n\r\nconst ContenedorFrase = styled.div`\r\n    padding: 3rem;\r\n    border-radius: .5rem;\r\n    background-color: #FFFFFF;\r\n    -webkit-box-shadow: 0px 0px 10px 10px rgba(0,0,0,0.5);\r\n    -moz-box-shadow: 0px 0px 10px 10px rgba(0,0,0,0.5);\r\n    box-shadow: 0px 0px 10px 10px rgba(0,0,0,0.5);\r\n    max-width: 300px;\r\n\r\n    @media ( min-width: 768px ) {\r\n        max-width: 800px;\r\n    }\r\n    \r\n    @media ( min-width: 992px ) {\r\n        margin-top: 10rem;\r\n    }\r\n\r\n    h1 {\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        text-align: center;\r\n        position: relative;\r\n        padding-left: 2rem;\r\n        font-size: 1rem;\r\n        \r\n        @media ( min-width: 768px ) {\r\n            padding-left: 4rem;\r\n            font-size: unset;\r\n        }\r\n        \r\n        &::before {\r\n            content: open-quote;\r\n            font-size: 5rem;\r\n            color: black;\r\n            position: absolute;\r\n            left: -1rem;\r\n            top: -2rem;\r\n\r\n            @media ( min-width: 768px ) {\r\n                top: -4rem;\r\n                font-size: 10rem;\r\n            }\r\n        }\r\n    }\r\n    \r\n    p {\r\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n        font-weight: bold;\r\n        text-align: right;\r\n        color: #666666;\r\n        margin-top: 2rem;\r\n        font-size: .5rem;\r\n        \r\n        @media ( min-width: 768px ) {\r\n            font-size: 1.4rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Frases = ({ frase:{ quote, author } }) => {\r\n    return (\r\n        <ContenedorFrase>\r\n            <h1>{ quote }</h1>\r\n            <p>- { author }</p>\r\n        </ContenedorFrase>\r\n    );\r\n};\r\n\r\nFrases.propTypes = {\r\n    frase: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Frases;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst SkChase = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n    position: relative;\r\n    animation: sk-chase 2.5s infinite linear both;\r\n\r\n    @keyframes sk-chase {\r\n        100% { transform: rotate(360deg); } \r\n    }\r\n`;\r\n\r\nconst SkChaseDot = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    animation: sk-chase-dot 2.0s infinite ease-in-out both; \r\n\r\n    @keyframes sk-chase-dot {\r\n        80%, 100% { transform: rotate(360deg); } \r\n    }\r\n\r\n    &::before {\r\n        content: '';\r\n        display: block;\r\n        width: 25%;\r\n        height: 25%;\r\n        background-color: #fff;\r\n        border-radius: 100%;\r\n        animation: sk-chase-dot-before 2.0s infinite ease-in-out both;\r\n\r\n        @keyframes sk-chase-dot-before {\r\n            50% {\r\n              transform: scale(0.4); \r\n            } 100%, 0% {\r\n              transform: scale(1.0); \r\n            } \r\n        }\r\n    }\r\n\r\n    &:nth-of-type(1) {\r\n        animation-delay: -1.1s;\r\n        &:before { animation-delay: -1.1s; }\r\n    }\r\n\r\n    &:nth-of-type(2) { \r\n        animation-delay: -1.0s;\r\n        &:before { animation-delay: -1.0s; }\r\n    }\r\n\r\n    &:nth-of-type(3) {\r\n        animation-delay: -0.9s;\r\n        &:before { animation-delay: -0.9s; }\r\n    }\r\n    \r\n    &:nth-of-type(4) { \r\n        animation-delay: -0.8s; \r\n        &:before { animation-delay: -0.8s; }\r\n    }\r\n\r\n    &:nth-of-type(5) { \r\n        animation-delay: -0.7s;\r\n        &:before { animation-delay: -0.7s; }\r\n    }\r\n\r\n    &:nth-of-type(6) { \r\n        animation-delay: -0.6s;\r\n        &:before { animation-delay: -0.6s; }\r\n    }\r\n`;\r\n\r\nconst Spinner = () => (\r\n    <SkChase>\r\n        <SkChaseDot></SkChaseDot>\r\n        <SkChaseDot></SkChaseDot>\r\n        <SkChaseDot></SkChaseDot>\r\n        <SkChaseDot></SkChaseDot>\r\n        <SkChaseDot></SkChaseDot>\r\n        <SkChaseDot></SkChaseDot>\r\n    </SkChase>\r\n);\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport Frases from './components/Frases';\nimport Spinner from './components/Spinner';\n\n// Styled Componenets\nconst Contenedor = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tpadding-top: 5rem;\n`;\n\nconst Boton = styled.button`\n\tbackground: -webkit-linear-gradient( top left, #007D35 0%, #007D35 40%, #0F574E 100% );\n\tbackground-size: 300px;\n\tborder: 2px solid black;\n\tcolor: #FFFFFF;\n\tfont-family: Arial, Helvetica, sans-serif;\n\tfont-size: 2rem;\n\tmargin-top: 3rem;\n\tpadding: 1rem 2.5rem;\n\ttransition: background-size .8s ease;\n\n\t&:hover {\n\t\tcursor: pointer;\n\t\tbackground-size: 400px;\n\t}\n`;\n\nfunction App() {\n\t// State de frases\n\tconst [ frase, guardarFrase ] \t\t= useState({});\n\tconst [ spinner, changeSpinner ] \t= useState( false );\n\n\tconst consultarAPI \t= async () => {\n\t\tchangeSpinner( true );\n\n\t\tconst api \t\t= await fetch( 'https://breaking-bad-quotes.herokuapp.com/v1/quotes' );\n\t\tconst frase\t\t= await api.json();\t\t\n\t\tguardarFrase( frase[0] );\n\n\t\tchangeSpinner( false );\n\t}\n\n\tuseEffect( () => {\n\t\tconsultarAPI();\n\t}, [] );\n\n\treturn (\n\t\t<Contenedor>\n\t\t\t{ spinner ? \n\t\t\t\t(\n\t\t\t\t\t<Spinner />\n\t\t\t\t)\n\t\t\t\t:\n\t\t\t\t(\n\t\t\t\t\t<Frases\n\t\t\t\t\t\tfrase={ frase }\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\t<Boton\n\t\t\t\tonClick={ consultarAPI }\n\t\t\t>\n\t\t\t\tObtener Frase\n\t\t\t</Boton>\n\t\t</Contenedor>\n\t);\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}